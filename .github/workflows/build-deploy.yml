name: Deploy to AKS

on:
  push:
    branches:
      - main


jobs:
    Build_Image:
        name: "Build Docker Image"
        runs-on: pcoe-runner-linux-prod
        permissions:
            id-token: write
            contents: read

        steps:
        #Hard code checking out main branch for now
        - name: Checkout Repo
          uses: actions/checkout@v3
          
        - name: Configure Azure
          uses: azure/login@v1
          with:
            client-id: ${{ inputs.CLIENT_ID }}
            tenant-id: ${{ inputs.TENANT_ID }}
            subscription-id: ${{ inputs.SUBSCRIPTION_ID }}
        
        - name: Docker Build
          working-directory: ${{ github.workspace }}
          run: |
            cd ${{inputs.DOCKER_FILE_FOLDER}}
            az acr login --name ${{ inputs.ACR_REGISTRY }}
            az acr build --image ${{inputs.image_name}}:${{inputs.tag}} --registry ${{ inputs.ACR_REGISTRY }} -f ${{inputs.DOCKER_FILE}} .
        - name: Print Image Name
          run: |
            echo "The image pushed to ACR is backend-image:${{inputs.image_name}}:${{inputs.tag}}"

    Deploy_Image:
        name: "Deploy Docker Image"
        runs-on: pcoe-runner-linux-prod
        permissions:
            id-token: write
            contents: read

        environment:
            name: ${{ inputs.env_name}}

        steps:

        - name: Configure Azure
          uses: azure/login@v1
          with:
            client-id: ${{ inputs.CLIENT_ID }}
            tenant-id: ${{ inputs.TENANT_ID }}
            subscription-id: ${{ inputs.SUBSCRIPTION_ID }}

        - name: Restarting Web App 
          run: |
            echo "Restarting container to pull latest image in ACR"
            az webapp restart --name ${{ inputs.CONTAINER }} --subscription ${{ inputs.APP_SUBSCRIPTION_ID}} --resource-group ${{ inputs.APP_RESOURCE_GROUP}}

        
